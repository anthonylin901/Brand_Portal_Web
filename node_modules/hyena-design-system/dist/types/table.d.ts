import type { Column as agCol, RowNode, ColDef } from "ag-grid-community";
import type { Option } from "./option";
export declare type Column<Row extends object> = ColDef & {
    field: keyof Row | "action";
    floatingFilterComponentParams?: {
        options?: Option[];
        suppressFilterButton?: boolean;
    };
};
export interface EmitColumnMoved {
    field?: string;
    toIndex?: number;
    allGridColumns: agCol[];
}
export interface EmitColumnVisible {
    hiddenField?: string;
    displayedColumns: agCol[];
}
export interface EmitFilterChanged {
    field?: string;
    filterModel: {
        field: string;
        filterType: string;
        type: string;
        filter: string;
    }[];
}
export interface EmitSortChanged {
    sortState: {
        field: string;
        sort?: "asc" | "desc" | null;
        sortOrder?: number | null;
    }[];
}
export interface EmitModelUpdated {
    rowCount: number;
    renderedRows: RowNode["data"][];
}
//# sourceMappingURL=table.d.ts.map