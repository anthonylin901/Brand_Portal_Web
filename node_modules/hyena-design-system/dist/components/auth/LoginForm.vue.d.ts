declare const _sfc_main: import("vue").DefineComponent<{
    username: null;
    password: null;
    isUsernameError: {
        type: BooleanConstructor;
    };
    isPasswordError: {
        type: BooleanConstructor;
    };
    logoPath: null;
    microsoftLoginUrl: null;
    title: null;
    labels: {
        default: () => {
            login: string;
            microsoftButton: string;
            usernameLabel: string;
            usernamePlaceholder: string;
            passwordLabel: string;
            passwordPlaceholder: string;
            forgetPassword: string;
        };
    };
}, (_ctx: any, _cache: any) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("handleLogin" | "microsftLoginCallback" | "update:username" | "update:password" | "handleForgetPassword")[], "handleLogin" | "microsftLoginCallback" | "update:username" | "update:password" | "handleForgetPassword", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    username: null;
    password: null;
    isUsernameError: {
        type: BooleanConstructor;
    };
    isPasswordError: {
        type: BooleanConstructor;
    };
    logoPath: null;
    microsoftLoginUrl: null;
    title: null;
    labels: {
        default: () => {
            login: string;
            microsoftButton: string;
            usernameLabel: string;
            usernamePlaceholder: string;
            passwordLabel: string;
            passwordPlaceholder: string;
            forgetPassword: string;
        };
    };
}>> & {
    onHandleLogin?: ((...args: any[]) => any) | undefined;
    onMicrosftLoginCallback?: ((...args: any[]) => any) | undefined;
    "onUpdate:username"?: ((...args: any[]) => any) | undefined;
    "onUpdate:password"?: ((...args: any[]) => any) | undefined;
    onHandleForgetPassword?: ((...args: any[]) => any) | undefined;
}, {
    isUsernameError: boolean;
    isPasswordError: boolean;
    labels: {
        login: string;
        microsoftButton: string;
        usernameLabel: string;
        usernamePlaceholder: string;
        passwordLabel: string;
        passwordPlaceholder: string;
        forgetPassword: string;
    };
}>;
export default _sfc_main;
//# sourceMappingURL=LoginForm.vue.d.ts.map