declare const _sfc_main: import("vue").DefineComponent<{
    newPassword: null;
    confirmPassword: null;
    isNewPasswordPass: {
        type: BooleanConstructor;
    };
    isConfirmPasswordPass: {
        type: BooleanConstructor;
    };
    title: {
        default: string;
    };
    isNeedCurrentPassword: {
        type: BooleanConstructor;
    };
    currentPassword: null;
    isShowGoBack: {
        type: BooleanConstructor;
    };
    labels: {
        default: () => {
            currentPasswordLabel: string;
            currentPasswordPlaceholder: string;
            newPasswordLabel: string;
            newPasswordPlaceholder: string;
            confirmPasswordLabel: string;
            confirmPasswordPlaceholder: string;
            passwordRule: string;
            confirmPasswordRule: string;
            changePassword: string;
            goBack: string;
        };
    };
}, (_ctx: any, _cache: any) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:currentPassword" | "update:newPassword" | "update:confirmPassword" | "handleChangePassword" | "goBack")[], "update:currentPassword" | "update:newPassword" | "update:confirmPassword" | "handleChangePassword" | "goBack", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    newPassword: null;
    confirmPassword: null;
    isNewPasswordPass: {
        type: BooleanConstructor;
    };
    isConfirmPasswordPass: {
        type: BooleanConstructor;
    };
    title: {
        default: string;
    };
    isNeedCurrentPassword: {
        type: BooleanConstructor;
    };
    currentPassword: null;
    isShowGoBack: {
        type: BooleanConstructor;
    };
    labels: {
        default: () => {
            currentPasswordLabel: string;
            currentPasswordPlaceholder: string;
            newPasswordLabel: string;
            newPasswordPlaceholder: string;
            confirmPasswordLabel: string;
            confirmPasswordPlaceholder: string;
            passwordRule: string;
            confirmPasswordRule: string;
            changePassword: string;
            goBack: string;
        };
    };
}>> & {
    "onUpdate:currentPassword"?: ((...args: any[]) => any) | undefined;
    "onUpdate:newPassword"?: ((...args: any[]) => any) | undefined;
    "onUpdate:confirmPassword"?: ((...args: any[]) => any) | undefined;
    onHandleChangePassword?: ((...args: any[]) => any) | undefined;
    onGoBack?: ((...args: any[]) => any) | undefined;
}, {
    isNewPasswordPass: boolean;
    isConfirmPasswordPass: boolean;
    title: string;
    isNeedCurrentPassword: boolean;
    isShowGoBack: boolean;
    labels: {
        currentPasswordLabel: string;
        currentPasswordPlaceholder: string;
        newPasswordLabel: string;
        newPasswordPlaceholder: string;
        confirmPasswordLabel: string;
        confirmPasswordPlaceholder: string;
        passwordRule: string;
        confirmPasswordRule: string;
        changePassword: string;
        goBack: string;
    };
}>;
export default _sfc_main;
//# sourceMappingURL=ChangePasswordForm.vue.d.ts.map