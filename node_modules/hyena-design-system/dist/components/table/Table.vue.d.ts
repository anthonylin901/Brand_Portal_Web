import "ag-grid-community/styles/ag-grid.css";
import "ag-grid-community/styles/ag-theme-alpine.css";
declare const _sfc_main: import("vue").DefineComponent<{
    rowData: null;
    columnDefs: null;
    title: null;
    rowHeight: null;
    action: null;
}, (_ctx: any, _cache: any) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("columnMoved" | "columnVisible" | "filterChanged" | "sortChanged" | "modelUpdated" | "apiReady")[], "columnMoved" | "columnVisible" | "filterChanged" | "sortChanged" | "modelUpdated" | "apiReady", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    rowData: null;
    columnDefs: null;
    title: null;
    rowHeight: null;
    action: null;
}>> & {
    onColumnMoved?: ((...args: any[]) => any) | undefined;
    onColumnVisible?: ((...args: any[]) => any) | undefined;
    onFilterChanged?: ((...args: any[]) => any) | undefined;
    onSortChanged?: ((...args: any[]) => any) | undefined;
    onModelUpdated?: ((...args: any[]) => any) | undefined;
    onApiReady?: ((...args: any[]) => any) | undefined;
}, {}>;
export default _sfc_main;
//# sourceMappingURL=Table.vue.d.ts.map